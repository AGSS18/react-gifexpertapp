{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","components/GifList.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","prevState","type","value","onChange","target","placeholder","GifItem","title","url","className","src","alt","getGifs","category","a","apiUrl","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifList","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"iMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAbV,SAAsBC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAE/CN,EAAc,KAQd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SATZ,SAA2BP,GACvBF,EAAcE,EAAMQ,OAAOF,QASnBG,YAAY,kB,QCfbC,EATC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACrB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCLFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACL,mCACTC,EAFc,iDAEqCF,EAFrC,6BACL,oCADK,SAGDG,MAAMD,GAHL,cAGdE,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATtB,kBAYbY,GAZa,4CAAH,sDCGRM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/BgC,OAAO,GACPG,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACLlB,EAAQC,GACJkB,MAAK,SAAAC,GACFH,EAAS,CACLL,OAAQQ,EACRL,SAAS,SAIrB,CAACd,IAEEe,EDfmBK,CAAapB,GAAhCW,EAAP,EAAOA,OAAQG,EAAf,EAAeA,QAEf,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IACnDc,GAAW,mBAAGlB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACSe,EAAOH,KAAI,SAACa,GACT,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAMX,aEYpBY,MAtBf,WAEI,MAAoC3C,mBAAS,CAAC,UAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,sBAAKkB,UAAU,YAAf,UACI,8CACA,cAAC,EAAD,CAAalB,cAAeA,IAC5B,uBACA,6BACK6C,EAAWf,KAAI,SAAAR,GACZ,OACA,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCZvBwB,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.76c63ba5.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(prevState => [inputValue, ...prevState]);\r\n        }\r\n        setInputValue('');\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n                type='text' \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"search GIF\"\r\n                />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","\r\nconst GifItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItem\r\n"," export const getGifs = async(category) => {\r\n    const apiKey = '2Wvh4EiXd5dCf5qEcR7MWJeLT82vj43S';\r\n    const apiUrl = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(apiUrl);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs; \r\n}","import GifItem from \"./GifItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifList = ({category}) => {\r\n\r\n    const {images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn' >{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash' >Loading...</p>}\r\n            <div className='card-list'>\r\n                    {images.map((image) => {\r\n                        return <GifItem \r\n                        key={image.id}\r\n                        {...image} />\r\n                    })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        images:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n         getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    images: imgs,\r\n                    loading: false\r\n                }); \r\n            }\r\n        );\r\n     }, [category]);\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifList } from \"./components/GifList\";\r\n\r\nfunction GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState(['Kirby']);\r\n\r\n    return (\r\n        <div className='container' >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ul>\r\n                {categories.map(category => {\r\n                    return (\r\n                    <GifList \r\n                        key={category} \r\n                        category={category} \r\n                    /> )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\nconst divRoot = document.getElementById('root');\r\n\r\nReactDOM.render(<GifExpertApp />, divRoot);"],"sourceRoot":""}